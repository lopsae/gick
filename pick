#!/bin/bash

read -d '' helpDoc <<"helpDoc"
NAME
    pick -- search standard input for an ordered list of substrings

SYNOPSIS
    pick [-hacD] <substrings>...

DESCRIPTION
    Prints, from the content read from the standard input, the first line
    that contains in order all given `<substrings>`.

    E.g,

        > cat fruits
        Blood orange
        Green apple
        Red apple

        > cat fruits | pick app
        Green apple

        > cat fruits | pick odd orange
        Blood orange

        > cat fruits | pick orange odd
        # Output to stderr
        No match found

    The `<substrings>` provided are joined into a extended regular expresion
    which can be output with the `-D` option. This allows the use of
    regular expresion terms in the `<substrings>` to furter refine the
    search.

    E.g,

        > cat fruits | pick re app
        Green apple

        > cat fruits | pick ^re app
        Red apple


    By default if all `<substrings>` contain only lowercase letters the
    matching is done ignoring all case diferences. If any upper case is
    used in the <substrings> the command will automatically switch to
    consider cases. This behaviour can be overriden with the `-c` option,
    which will force the command to always consider cases.

    E.g,

        > cat fruits | pick re app
        Green apple

        > cat fruits | pick Re app
        Red apple

        > cat fruits | pick -c re app
        # Output to stderr
        No match found

OPTIONS
    -h  Prints this help output.

    -a  Displays all lines that match the search.

    -c  Forces the command to consider case differences.

    -D  Prints to standard error the regular expression used to search for
        matches. Afterwards matches are printed normally.

EXIT STATUS
    0   If a matching line is found.

    >0  If no `<substrings>` are given, or no content is received through
        standard input, or no matching line is found.
helpDoc


# Error codes
error_invalidOptions=1
error_noStdin=2
error_noParams=3
error_noMatch=4


# Options values
allMatches='false'
ignoreCase='true'
debugSearch='false'


# Options parsing
while getopts :hacdD option; do
	case $option in
 		h)
			# Print help
			if [[ -t 0 ]]; then
				echo "$helpDoc" | less
			else
				echo "$helpDoc"
			fi
			exit 0
			;;
		a)
			# Display all matches
			allMatches='true'
			;;
		c)
			# Force to not ignore case
			ignoreCase='false'
			;;
		D)
			# Display search string
			debugSearch='true'
			;;
		?)
            echo "Invalid option: -$OPTARG" >&2
			exit $error_invalidOptions
			;;
	esac
done

shift $(( OPTIND - 1 ));


# Options validation
if [[ -t 0 ]]; then
	echo 'No stdin given' >&2
	exit $error_noStdin
fi

if [[ $# = 0 ]]; then
	echo 'No parameters given' >&2
	exit $error_noParams
fi


piped=$(cat)

# Any capital case triggers not ignoring case
if [[ "$@" =~ [A-Z] ]]; then
	ignoreCase='false'
fi

# Append a wildcard between each param
search=''
wildcard='.*'
for param in $@; do
	search="$search$param$wildcard"
done

# Remove the trailing wildcard
search=${search%"$wildcard"}

# Printing out debug string
if [[ $debugSearch = 'true' ]]; then
	echo "$search" >&2
fi

grepOptions=''
if [[ $allMatches = 'false' ]];then
	grepOptions+=' --max-count 1'
fi
if [[ $ignoreCase = 'true' ]];then
	grepOptions+=' --ignore-case'
fi

matches=$(echo "$piped" | grep -E $grepOptions "$search")

if [[ $? != 0 ]]; then
	echo 'No match found' >&2
	exit $error_noMatch
fi

echo "$matches"

