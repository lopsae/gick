#!/bin/bash

# Prints a single line from the content piped in, this line will contain
# all the strings passed in as parameters to the script.

# If no arguments or no content piped in is given the script will end
# with a non-zero value. Samewise if no match is found in the content
# piped in.


# Error codes
error_noStdin=1
error_noParams=2
error_invalidOptions=3
error_invalidParams=4
error_noMatch=5

# Basic checks
if [[ -t 0 ]]; then
	echo 'No stdin given' >&2
	exit $error_noStdin
fi

if [[ $# = 0 ]]; then
	echo 'No parameters given' >&2
	exit $error_noParams
fi

# Options parsing
params=`getopt a $*`
getoptStatus=$?
set -- $params

if [[ $getoptStatus != 0 ]]; then
	echo 'Invalid options' >&2
	exit $error_invalidOptions
fi

maxCount='--max-count 1'

for param; do
	case "$param" in
		-a)
			maxCount=''
			shift
			;;
		--)
			shift
			break
			;;
	esac
done

piped=`cat`

search=''
wildcard='.*'
for param in $@; do
	# Append a wildcard between each param
	search=$search$param$wildcard
done

# Remove the trailing wildcard
search=${search%"$wildCard"}

# Piped needs to be between quotes as to not loose the newlines
match=`echo "$piped" | grep $maxCount $search`

if [[ $? != 0 ]]; then
	echo 'No match found' >&2
	exit $error_noMatch
fi

echo "$match"

