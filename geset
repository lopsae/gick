#!/bin/bash

# Unstages files using gick. Any option passed is given directly to the
# gick command.

# If dot is used as the single option the command acts over all the files
# that appear in git status.

# If content is given through stdin it is interpreted as a list of files
# separated by newlines over which the command will act. In this case any
# option given to the command is ignored.


# Error codes
error_noFilesFound=1


# Options values
usePiped=false
piped=''

# If there is piped content it is used and any option is ignored
if [[ ! -t 0 ]]; then
	usePiped=true
	piped=$(cat)

# Dot special case
elif [[ $# = 1 && $1 = '.' ]]; then
	git status --porcelain | cut -c 4- | geset
	exit $?
fi

# Getting the list of files to use
fileList=''
if [[ $usePiped = true ]]; then
	# Use piped list
	fileList="$piped"
else
	# Find the file with gick
	fileList=$(gick $@ 2>/dev/null)

	if [[ $? != 0 ]]; then
		echo 'No files found' >&2
		exit $error_noFilesFound
	fi
fi


# Reseting the files
IFS=$'\n'
for fileName in $fileList; do
	# TODO
	# file name in here might contain spaces since gick will
	# return the whole name, per line, without any quotes
	# THIS WORKS BECAUSE IFS IS SET TO \n
	# if IFS is unset, the command stops working because 
	# the spaces in the file name break the command.
	# One solution is to quote the file?
	echo "reset '$fileName'"
	git reset --quiet HEAD -- $fileName
done
unset IFS

