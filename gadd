#!/bin/bash

# Adds and removes files using gick. Any option passed is given directly to the
# gick command.

# If content is given through stdin it is interpreted as a list of files
# separated by newlines over which the command will act. In this case any
# option given to gadd is ignored.


# Error codes
error_noFilesFound=1


# Options values
usePiped=false
piped=''

# If there is piped content it is used and any option is ignored
if [[ ! -t 0 ]]; then
	usePiped=true
	piped=$(cat)

# Dot special case
elif [[ $# = 1 && $1 = '.' ]]; then
	git status --porcelain | cut -c 4- | gadd
	exit $?
fi

# Getting the list of files to use
fileList=''
if [[ $usePiped = true ]]; then
	# Use piped list
	fileList="$piped"
else
	# Find the file with gick
	fileList=$(gick $@ 2>/dev/null)

	if [[ $? != 0 ]]; then
		echo 'No files found' >&2
		exit $error_noFilesFound
	fi
fi

# Properly adding each thing
IFS=$'\n'
for fileName in $fileList; do
	# Retrieve both status of the file
	fileStatus=$(git status --porcelain $fileName)
	stageStatus=${fileStatus:0:1}
	workStatus=${fileStatus:1:1}

	case $workStatus in
		' ')
			case $stageStatus in
				[MAR])
					echo "Already staged '$fileName'" >&2
					;;
				[D])
					echo "Already removed '$fileName'" >&2
					;;
				esac
			;;
		[MA?])
			git add -v $fileName
			;;
		[D])
			git rm $fileName
			;;
		*)
			echo "Unknown status '$workStatus' for '$fileName'"  >&2
			echo 'No operation done' >&2
			;;
	esac
done
unset IFS

